# Generated by Django 4.2.3 on 2023-09-05 17:59

import app.managers
import app.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=15, verbose_name="Номер телефона"),
                ),
                ("email", models.EmailField(default="", max_length=254, unique=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользовать",
                "verbose_name_plural": "Пользователи",
                "ordering": ["email"],
            },
            managers=[
                ("objects", app.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=155, verbose_name="Категория")),
                ("slug", models.SlugField(default="", verbose_name="Слаг")),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
            },
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Название клиента"),
                ),
                (
                    "photo",
                    models.ImageField(
                        upload_to="clients/", verbose_name="Логотип клиента"
                    ),
                ),
            ],
            options={
                "verbose_name": "Клиент",
                "verbose_name_plural": "Клиенты",
            },
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=150, verbose_name="Имя")),
                ("last_name", models.CharField(max_length=150, verbose_name="Фамилия")),
                ("email", models.EmailField(max_length=254, verbose_name="Почта")),
                (
                    "phone_number",
                    models.CharField(max_length=15, verbose_name="Номер телефона"),
                ),
                (
                    "mounting_type",
                    models.CharField(max_length=255, verbose_name="Тип монтажа"),
                ),
                ("address", models.CharField(max_length=255, verbose_name="Адрес")),
                (
                    "comment",
                    models.CharField(
                        default="", max_length=1000, verbose_name="Комментарий"
                    ),
                ),
                (
                    "delivery_type",
                    models.CharField(max_length=150, verbose_name="Тип доставки"),
                ),
                (
                    "delivery_option",
                    models.CharField(
                        default="", max_length=150, verbose_name="Вариант доставки"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "youtube_video_url",
                    models.URLField(
                        help_text="Нужно поставить ссылку из встраивания видео с ютуба",
                        verbose_name="Ссылка на видео",
                    ),
                ),
            ],
            options={
                "verbose_name": "Вопрос",
                "verbose_name_plural": "Вопросы",
            },
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("body", models.TextField(verbose_name="Текст отзыва")),
                (
                    "feedback_author",
                    models.CharField(max_length=255, verbose_name="Имя автора отзыва"),
                ),
                (
                    "author_company",
                    models.CharField(
                        max_length=255, verbose_name="Компания автора отзыва"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        upload_to="feedback/author/", verbose_name="Фото автора отзыва"
                    ),
                ),
            ],
            options={
                "verbose_name": "Отзыв",
                "verbose_name_plural": "Отзывы",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app.customer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=155, unique=True, verbose_name="Название товара"
                    ),
                ),
                (
                    "width",
                    models.CharField(
                        choices=[
                            ("1 мм", "1 мм"),
                            ("2 мм", "2 мм"),
                            ("3 мм", "3 мм"),
                            ("4 мм", "4 мм"),
                            ("5 мм", "5 мм"),
                            ("6 мм", "6 мм"),
                            ("7 мм", "7 мм"),
                            ("8 мм", "8 мм"),
                            ("9 мм", "9 мм"),
                            ("10 мм", "10 мм"),
                            ("11 мм", "11 мм"),
                            ("12 мм", "12 мм"),
                            ("13 мм", "13 мм"),
                            ("14 мм", "14 мм"),
                            ("15 мм", "15 мм"),
                            ("16 мм", "16 мм"),
                            ("17 мм", "17 мм"),
                            ("18 мм", "18 мм"),
                            ("19 мм", "19 мм"),
                            ("20 мм", "20 мм"),
                            ("21 мм", "21 мм"),
                            ("22 мм", "22 мм"),
                            ("23 мм", "23 мм"),
                            ("24 мм", "24 мм"),
                            ("25 мм", "25 мм"),
                            ("26 мм", "26 мм"),
                            ("27 мм", "27 мм"),
                            ("28 мм", "28 мм"),
                            ("29 мм", "29 мм"),
                        ],
                        max_length=15,
                        verbose_name="Ширина",
                    ),
                ),
                (
                    "height",
                    models.CharField(
                        choices=[
                            ("1 мм", "1 мм"),
                            ("2 мм", "2 мм"),
                            ("3 мм", "3 мм"),
                            ("4 мм", "4 мм"),
                            ("5 мм", "5 мм"),
                            ("6 мм", "6 мм"),
                            ("7 мм", "7 мм"),
                            ("8 мм", "8 мм"),
                            ("9 мм", "9 мм"),
                            ("10 мм", "10 мм"),
                            ("11 мм", "11 мм"),
                            ("12 мм", "12 мм"),
                            ("13 мм", "13 мм"),
                            ("14 мм", "14 мм"),
                            ("15 мм", "15 мм"),
                            ("16 мм", "16 мм"),
                            ("17 мм", "17 мм"),
                            ("18 мм", "18 мм"),
                            ("19 мм", "19 мм"),
                            ("20 мм", "20 мм"),
                            ("21 мм", "21 мм"),
                            ("22 мм", "22 мм"),
                            ("23 мм", "23 мм"),
                            ("24 мм", "24 мм"),
                            ("25 мм", "25 мм"),
                            ("26 мм", "26 мм"),
                            ("27 мм", "27 мм"),
                            ("28 мм", "28 мм"),
                            ("29 мм", "29 мм"),
                        ],
                        max_length=15,
                        verbose_name="Высота",
                    ),
                ),
                (
                    "is_left_control",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="Управление слева?"
                    ),
                ),
                (
                    "is_right_control",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="Управление Справа?"
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (4, 4),
                            (5, 5),
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                            (11, 11),
                            (12, 12),
                            (13, 13),
                            (14, 14),
                            (15, 15),
                            (16, 16),
                            (17, 17),
                            (18, 18),
                            (19, 19),
                            (20, 20),
                            (21, 21),
                            (22, 22),
                            (23, 23),
                            (24, 24),
                            (25, 25),
                            (26, 26),
                            (27, 27),
                            (28, 28),
                            (29, 29),
                        ],
                        verbose_name="Количество",
                    ),
                ),
                (
                    "cornice_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Алюминевый", "Алюминевый"),
                            ("Пластиковый", "Пластиковый"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "control_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Ручной", "Ручной"),
                            ("С электроприводом", "С электроприводом"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "manufacturer_country",
                    models.CharField(
                        max_length=150, verbose_name="Страна производитель"
                    ),
                ),
                (
                    "fabric_type",
                    models.CharField(max_length=150, verbose_name="Тип ткани"),
                ),
                ("property", models.CharField(max_length=100, verbose_name="Свойство")),
                (
                    "dimming",
                    models.SmallIntegerField(default=0, verbose_name="Затемнение"),
                ),
                ("price", models.SmallIntegerField(default=0, verbose_name="Цена")),
                ("description", models.TextField(verbose_name="Описание продукта")),
                ("slug", models.SlugField(default="")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Дата добавления"
                    ),
                ),
                (
                    "color",
                    models.CharField(default="", max_length=100, verbose_name="Цвет"),
                ),
                (
                    "discount",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Размер скидки"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="categories",
                        to="app.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Продукт",
                "verbose_name_plural": "Продукты",
            },
        ),
        migrations.CreateModel(
            name="ProjectsGallery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="Заголовок проекта"),
                ),
                (
                    "subtitle",
                    models.CharField(
                        max_length=255, verbose_name="Подзаголовок проекта"
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        default="",
                        upload_to="gallery/projects/",
                        verbose_name="Фото проекта",
                    ),
                ),
            ],
            options={
                "verbose_name": "Проект",
                "verbose_name_plural": "Галерея проектов",
            },
        ),
        migrations.CreateModel(
            name="ProductOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "option_main",
                    models.CharField(
                        max_length=200, verbose_name="Главная характеристика"
                    ),
                ),
                (
                    "option_additional",
                    models.TextField(verbose_name="Описание характеристики"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_options",
                        to="app.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        upload_to=app.models.ProductImage.make_folder_path,
                        verbose_name="Фото",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="app.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrderProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(default=0)),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app.order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="order_products",
                        to="app.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("body", models.TextField(verbose_name="Текст комментария")),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="app.product",
                    ),
                ),
            ],
        ),
    ]
